
type Book {
    id: ID!
    title: String
    pages: Int
}

type ResponseMessage {
    message: String
}

type Tag {
    id: Int
    topic: String
    description : String
    lesson: [Lesson]
}

type Lesson {
    id: Int
    tag: Tag
    name: String
    content: String
}

type TagProblem {
    id: Int
    tag: Tag
    problem : Problem
}

type Problem {
    id: Int
    name: String
    tagProblem: [TagProblem]
    description: String
    solution: String
    exampleParameter: String
    isOfficial: Boolean
    example: [Example]
    testcase: [Testcase]
    level: Int
    totalScore: Int
    submission: [Submission]
    user: User
}

type Example {
    id: Int
    input: String
    output: String
    problem: [Problem]
}

type Testcase {
    id: Int
    input: String
    output: String
    problem: [Problem]
}

type CheckAnswerResult {
    exampleResults: [ExampleResult]
    testcaseResults: [TestcaseResult]
}

type ExampleResult {
    id: ID!
    status: String!
    message: String
}

type TestcaseResult {
    id: ID!
    status: String!
    message: String
}


type Authorities {
    id: Int
    name: String
    user: [User]
}

type User {
    id: ID!
    name: String
    email: String
    authorities: [Authorities]
    problem: [Problem]
    submission: [Submission]
}

type Submission {
    id: Int
    user: User
    problem: Problem
    score: Int
}

type Skill {
    id: Int
    tag: Tag
    level: Int
}

type UserResponse {
    id: Int
    name: String
    email: String
    authorities: [String]
    score: Int
    scoreUnOfficial: Int
    skills: [Skill]
}